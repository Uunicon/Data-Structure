#include <iostream>
using namespace std;

#define MAXSIZE 100
//线性表的顺序储存实现 以int型为例
struct List
{
	int Data[MAXSIZE];
	int last;           //用于存放最后一个数据对应的数辆
};
List *PtrL;

//产生一个空的固定空间的线性表
List *MakeEmpty()      
{
	PtrL = new List;
	PtrL->last = 0;
	return PtrL;
}

//向表内插入一个数
void Insert(int X, int i, List *p)
{

	int j;
	if (p->last == MAXSIZE - 1)
	{
		cout << "表满" << endl; return;
	}
	if (i<1 || i>p->last + 2)
	{
		cout << "位置不合法" << endl; return;
	}
	for (j = p->last; j >= i - 1; j--) //j为列表长度 i为插入数据所在位置
		p->Data[j + 1] = p->Data[j];   //先移动后面的数值
	p->Data[i - 1] = X;
	p->last++;
	return;
}

//按照序号找一个数，找到则返回标号i，未找到则返回-1
int Find(int X, List *p)
{
	int i = 0;
	while (i <= p->last && p->Data[i] != X) //若i小于last、未找到X，i++
		i++;
	if (i > p->last)return -1;
	else return i;
}

int main()
{
	List *MakeEmpty();
	void Inster(int X, int i, List *p);
	int Find(int X,List *p);
	PtrL = MakeEmpty();
	for(int i=0;i<5;i++)             //测试插入函数，插入5个数：0，10，20，30，40
	Insert(i*10, i+1, PtrL);
	for (int i = 0; i < 5; i++)
		cout << PtrL->Data[i]<<endl;
	cout << PtrL->last << endl;
	cout << "Please input the target number ";
	int t;                          //target number
	cin >> t;
	cout << "The subscript of the target number is " << Find(t,PtrL) << endl; //测试查找函数，输入数值返回下标，未找到返回-1
	return 0;
}
